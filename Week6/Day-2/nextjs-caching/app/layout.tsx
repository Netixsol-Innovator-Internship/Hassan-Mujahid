import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

type Time = {
  datetime: any;
};

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const getTime = async (): Promise<Time> => {
  //   const res = await fetch(
  //     "https://script.google.com/macros/s/AKfycbyJaXi_W86js1-I8lcY4v3mDlHx0gkdJAtsGol225EEnWTQOtOIrFGQ8iLGvN9bT7BF/exec?timezone=Asia/Karachi",
  //     {
  //       next: {
  //         revalidate: 5,
  //       },
  //     }
  //   );
  //   return res.json();
  // }; // This function fetches the current time from a Google Apps Script API and caches the response for 5 seconds using Next.js revalidation.
  // Any requests made within this period return the cached time, while a new API request is made after 5 seconds to fetch updated data.

  // const [data, time] = await Promise.all([getRepo("turborepo"), getTime()]);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}

// https://api.github.com/repos/vercel/next.js
// https://script.google.com/macros/s/AKfycbyJaXi_W86js1-I8lcY4v3mDlHx0gkdJAtsGol225EEnWTQOtOIrFGQ8iLGvN9bT7BF/exec
